---
import Base from "@/layouts/BaseLayout.astro";
import Header from "@/components/Header.astro";
import Footer from "@/components/Footer.astro";
import { t, isLocale } from "@/lib/i18n";

 const prerender = true;

const { lang } = Astro.params;
if (!lang || !isLocale(lang)) { throw new Error("Invalid locale"); }
const title = t("contact", "title", lang);
const subtitle = t("contact", "subtitle", lang);
const url = Astro.url.href;
const sent = Astro.url.searchParams.get('sent');
const error = Astro.url.searchParams.get('error');
const e = Astro.url.searchParams.get('e');
---
<Base title={title} desc={subtitle} url={url} lang={lang}>
  <Header lang={lang} />
  <main class="container py-12">
    <h1 class="text-3xl font-semibold">{title}</h1>
    <p class="mt-2 text-[var(--color-muted)]">{subtitle}</p>

    {sent && (
      <div id="sent-alert" role="status" class="mt-4 rounded-lg border border-green-800/40 bg-green-900/20 text-green-200 px-4 py-3">
        {t('contact','sent_success', lang)}
      </div>
    )}
    {error && (
      <div class="mt-4 rounded-lg border border-red-800/40 bg-red-900/20 text-red-200 px-4 py-3">
        {t('contact','error_failed', lang)} {e === 'val' && t('contact','error_val', lang)}
        {e === 'auth' && t('contact','error_auth', lang)}
        {e === 'conn' && t('contact','error_conn', lang)}
        {!e && t('contact','error_retry', lang)}
      </div>
    )}

    <form class="mt-8 grid grid-cols-1 gap-4 md:grid-cols-2 card p-6" method="post" action={`/api/contact?lang=${lang}`}>
      <label class="text-sm">
        <span>{t('contact','form_name', lang)}</span>
        <input class="mt-1 w-full rounded-lg bg-black/20 p-3 outline-none border border-[var(--color-border)]" name="name" required minlength="1" maxlength="100" />
      </label>
      <label class="text-sm">
        <span>{t('contact','form_email', lang)}</span>
        <input class="mt-1 w-full rounded-lg bg-black/20 p-3 outline-none border border-[var(--color-border)]" type="email" name="email" required maxlength="254" />
      </label>
      <label class="text-sm md:col-span-2">
        <span>{t('contact','form_message', lang)}</span>
        <textarea class="mt-1 w-full rounded-lg bg-black/20 p-3 outline-none border border-[var(--color-border)]" name="message" rows="4" required minlength="5" maxlength="5000" placeholder={t('contact','form_message_placeholder', lang)}></textarea>
      </label>
      <label class="hidden">
        <span>{t('contact','spam_guard', lang)}</span>
        <input type="text" name="website" tabindex="-1" autocomplete="off" />
      </label>
      <div class="md:col-span-2">
        <button class="btn btn-primary px-6 py-3 text-base font-semibold">{t('contact','send', lang)}</button>
      </div>
    </form>

    <div class="mt-6 flex flex-col gap-3 rounded-2xl border border-[var(--color-border)] bg-[var(--color-bg-soft)] p-6 text-sm text-[var(--color-muted)]">
      <div>{t('contact','privacy_notice', lang)}</div>
      <div>{t('contact','privacy_detail', lang)}</div>
      <a href="mailto:hello@zhouzhiou.com" class="inline-flex items-center gap-2 text-[var(--color-primary)]">
        {t('contact','mailto_label', lang)}
        <span aria-hidden="true">â†’</span>
      </a>
    </div>

    <Footer lang={lang} />
  </main>
  <script>
    (function () {
      var node = document.getElementById('sent-alert');
      if (!(node instanceof HTMLElement)) return;
      var alertEl = node;
      // Auto dismiss after 4s with a small fade
      setTimeout(function () {
        alertEl.style.transition = 'opacity 200ms ease';
        alertEl.style.opacity = '0';
        setTimeout(function () { alertEl.remove(); }, 240);
      }, 4000);
      // Clean the URL so refreshing doesn't re-show the banner
      try {
        var url = new URL(window.location.href);
        url.searchParams.delete('sent');
        window.history.replaceState({}, document.title, url.toString());
      } catch (_) {}
    })();
  </script>
</Base>

